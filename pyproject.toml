# Build System
[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

# Project Metadata
[project]
name = "pythonvilag_website"
version = "0.0.1"
description = "Pythonvilag website."
readme = "README.md"
requires-python = ">=3.11"
license = { file = "LICENSE" }
authors = [{ name = "Daniel Mizsak", email = "info@pythonvilag.hu" }]
keywords = ["website", "tutorial", "flask", "pythonvilag"]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "email-validator == 1.3.1",
    "Flask-Caching==2.1.0",
    "Flask-SQLAlchemy==2.5.1",
    "Flask-WTF==1.2.1",
    "Flask==2.3.3",
    "gunicorn==21.2.0",
    "itsdangerous==2.1.2",
    "python-dotenv==1.0.0",
    "SQLAlchemy==1.4.50",
    "Werkzeug==2.3.8",
    # Self maintained
    # "private-lecture-automation==0.2.0",
    # "checkmark==0.1.0",
]

[project.optional-dependencies]
dev = ["mypy", "pre-commit", "pytest-cov", "pytest", "ruff", "tox"]

[project.urls]
Repository = "https://github.com/PythonVilag/pythonvilag-website/"
Homepage = "https://pythonvilag.hu/"

# Tools
# MyPy
[tool.mypy]
exclude = ["^tests/"]
ignore_missing_imports = true
pretty = true
show_column_numbers = true
show_error_context = true
strict = true
warn_unreachable = true
warn_unused_ignores = true

# Pytest
[tool.pytest.ini_options]
addopts = "--cov=pythonvilag_website"
testpaths = ["tests"]
filterwarnings = ["ignore::DeprecationWarning"]

# Ruff
[tool.ruff]
select = ["ALL"]
line-length = 120
src = ["src", "tests"]
ignore = [
    "D203",  # one-blank-line-before-class
    "D212",  # multi-line-summary-first-line
    "FIX",   # flake8-fixme
    "INP",   # flake8-no-pep420
    "S104",  # hardcoded-bind-all-interfaces
    "TD002", # missing-todo-author
    "TD003", # missing-todo-link
]
[tool.ruff.per-file-ignores]
"**/__init__.py" = [
    "D104", # undocumented-public-package
]
"tests/**/*.py" = [
    "ANN001",  # missing-type-function-argument
    "ANN201",  # missing-return-type-undocumented-public-function
    "D",       # pydocstyle
    "PLR2004", # magic-value-comparison
    "S101",    # assert
]
[tool.ruff.pydocstyle]
convention = "google"

# Tox
[tool.tox]
legacy_tox_ini = """
    [tox]
    envlist = py311,mypy,ruff
    skip-missing-interpreters = true

    [gh]
    python =
        3.11 = py311, mypy, ruff

    [testenv]
    setenv =
        PV_SECRET_KEY = {env:PV_SECRET_KEY:SECRET}
        FLASK_DEBUG = {env:FLASK_DEBUG:False}
        PRIVATE_LECTURE_AUTOMATION = {env:PRIVATE_LECTURE_AUTOMATION:False}
        CHECKMARK = {env:CHECKMARK:False}
    deps =
        pytest
        pytest-cov
    commands = pytest {posargs:tests}

    [testenv:mypy]
    basepython = python3.11
    deps = mypy
    commands = mypy .

    [testenv:ruff]
    basepython = python3.11
    deps = ruff
    commands = ruff check .
"""
